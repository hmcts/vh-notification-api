name: $(Date:yyyyMMddHHmm)-$(Rev:r)

trigger:
  - release/*

pr: none

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: master
      endpoint: hmcts

pool: 
  vmImage: ubuntu-22.04

#####################################################
# Pre Release Tasks. #################
stages:
- stage: Pre_Run_Tasks
  displayName: Pre-Release Tasks
  variables:
  - template: variables/shared.yaml
  jobs:
  - job: Generate_Entity_Framework_Script
    displayName: "Generate Entity Framework Script"
    steps:
    - template: templates/Database/EntityFramework/generate-script.yaml@azTemplates
      parameters:
        outputPath: $(Build.StagingDirectory)
        contextName: ${{ variables.efContextName }}
        workingPath: $(System.DefaultWorkingDirectory)/${{ variables.appName }}/${{ variables.appName }}
        projectName: ${{ variables.efProjectName }}
        migrationsPath: ${{ variables.appName }}/${{ variables.appName }}.DAL/Migrations

  - job: PublishAcceptanceTests
    displayName: Publish Acceptance Tests
    variables:
      projectPath: "${{ variables.appName }}/${{ variables.appName }}"
    steps:
    - template: templates\dotnet\publish-acceptance-tests.yml@azTemplates
      parameters:
        netVersion: 6.x
        coreProjectPath: $(projectPath)
        nugetProjectPath: $(projectPath)
        nugetConfigPath: ${{ variables.appName }}
        useNugetConfig: true

#####################################################
# Run Entity Framework Staging. #####################
- stage: Run_Entity_Framework_Staging
  displayName: Staging EF Release
  dependsOn:
    - Pre_Run_Tasks
  variables:
  - template: variables/staging.yaml
  - template: variables/shared.yaml
    parameters:
      env: ${{ variables.env }}

  jobs:
  - job: Run_Entity_Framework_Staging
    pool:
      vmImage: 'windows-latest'
    displayName: Run Entity Framework Staging
    steps:
    - download: current
      displayName: Download Sql Artifact

    - template: templates/Azure/Common/unlock-lock.yaml@azTemplates
      parameters:
        addOrDelete: delete
        lockName: "${{ variables.env }}-lock"
        resourceGroup: ${{ variables.vhResourceGroup }}
        azureSubscription: ${{ variables.subscriptionName }}

    - template: templates/Database/EntityFramework/run-entity-framework.yaml@azTemplates
      parameters:
        sqlServerResourceGroup: ${{ variables.vhResourceGroup }}
        sqlServerName: ${{ variables.vhSQLServerName }}
        databaseName: ${{ variables.NotificationApiDbName }}
        azureSubscription: ${{ variables.subscriptionName }}
        sqlScriptLocation: "$(Pipeline.Workspace)/${{ variables.efContextName }}-$(Build.BuildId)/${{ variables.efContextName }}.sql"
        kvfirewallRequired: false
        kvName: ${{ variables.vhKeyVault }}
        kvSqlPasswordSecret: ${{ variables.vhSqlPasswordSecret }}
        kvSqlUsernameSecret: ${{ variables.vhSqlUsernameSecret }}

    - template: templates/Azure/Common/unlock-lock.yaml@azTemplates
      parameters:
        addOrDelete: add
        lockName: "${{ variables.env }}-lock"
        resourceGroup: ${{ variables.vhResourceGroup }}
        azureSubscription: ${{ variables.subscriptionName }}
        lockType: CanNotDelete

#####################################################
# Build Docker Image & Push. ########################
- stage: Docker_Build_Push
  displayName: Docker Build & Push Image
  dependsOn: 
    - Run_Entity_Framework_Staging
  variables:
  - template: variables/staging.yaml
  - template: variables/shared.yaml
  jobs:
  - job: Docker_Build
    displayName: "Docker Build and Push"
    steps:
    - checkout: self

    - bash: |
        sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.sds.config
      displayName: Add NuGet Feed Authentication
      workingDirectory: ${{ variables.appName }}
  
    - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates
      parameters:
        azureSubscription: ${{ variables.acrSubscription }}
        acrName: ${{ variables.acrName }}
        repositoryName:  ${{ variables.repositoryName }}

    - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
      parameters:
        azureSubscription: ${{ variables.acrSubscription }}
        acrName: ${{ variables.acrName }}
        repositoryName:  ${{ variables.repositoryName }}
        imageName: "${{ variables.imageName }}"
        imageTags:
          - '${{ variables.stagingTagName }}'

#########################################
# Push Helm Charts to Repo. #############
- stage: Helm_Staging
  displayName: Push Helm Charts
  dependsOn: 
    - Docker_Build_Push
  variables:
  - template: variables/staging.yaml
  - template: variables/shared.yaml
  - group: vh-github-app-credentials
  jobs:
  - job: Helm
    displayName: "Helm Push"
    steps:
    - checkout: self

    - template: templates\Github\get-app-token.yaml@azTemplates
      parameters:
        privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
        appId: $(gh_app_app_id)

    - template: templates\Github\push-to-helm-chart-repo.yaml@azTemplates
      parameters:
        chartName: ${{ variables.chartName }}
        chartPath: ${{ variables.chartPath }}
        githubToken: $(githubappinstall.token)
        githubUsername: $(gh_app_name)
        githubEmail: "$(gh_app_app_id)+$(gh_app_name)[bot]@users.noreply.github.com"
        subDirectory: ${{ variables.subDirectory }}

##################################################
# Run Acceptance Tests. ##########################
- stage: Acceptance_Tests_Staging
  dependsOn: 
    - Helm_Staging
  displayName: Acceptance Tests Staging
  variables:
  - group: vh-notification-api
  - template: variables/staging.yaml
  - template: variables/shared.yaml
    parameters:
      env: ${{ variables.env }}
  - name: dnsRecordName
    value: vh-${{ variables.git_repo_name }}
  jobs:
  - job: AcceptanceTestsStaging
    pool: VH Self Hosted
    displayName: Acceptance Tests Staging
    steps:
    - template: templates/dotnet/run-acceptance-tests.yml@azTemplates
      parameters:
        environment: ${{ variables.env }}
        azureSubscription: ${{ variables.subscriptionName }}
        acceptanceTestSettings:
        - name: ConnectionStrings:VhNotificationsApi
          value: connectionstrings--vhnotificationsapi
          keyVaultName: vh-infra-core-${{ variables.env }}
          secret: true
        - name: Services:NotificationApiUrl
          value: "https://vh-notification-api.staging.platform.hmcts.net"
        - name: Services:VhNotificationApiResourceId
          value: azuread--identifieruri
          keyVaultName: vh-notification-api-${{ variables.env }}
          secret: true
        - name: ApplicationInsights:InstrumentationKey
          value: applicationinsights--instrumentationkey
          keyVaultName: vh-infra-core-${{ variables.env }}
          secret: true
        - name: AzureAd:ClientId
          value: azuread--clientid
          keyVaultName: vh-notification-api-${{ variables.env }}
          secret: true
        - name: AzureAd:ClientSecret
          value: azuread--clientsecret
          keyVaultName: vh-notification-api-${{ variables.env }}
          secret: true
        - name: AzureAd:TenantId
          value: azuread--tenantid
          keyVaultName: vh-infra-core-${{ variables.env }}
          secret: true
        # GOV Notify Configuration
        - name: NotifyConfiguration:ApiKey
          value: $(notify-api-key)
        - name: NotifyConfiguration:CallbackSecret
          value: $(notify-callback-secret)
        - name: NotifyConfiguration:Environment
          value: $(notify-environment)

  #####################################################
  # Approval Release to Prod #############################
  - stage: Approve_Production_Release
    displayName: 'Approve Prod Release'
    jobs:
    - job: Approve_Production_Release
      displayName: Approve Prod Release
      pool: server
      timeoutInMinutes: 10080 # 7 days
      steps:
      - task: ManualValidation@0
        timeoutInMinutes: 110080 # 7 days
        inputs:
          instructions: 'Please Approve Release to Production'
          onTimeout: 'reject'

#####################################################
# Run Entity Framework Prod. #####################
- stage: Run_Entity_Framework_Production
  displayName: Prod EF Release
  dependsOn: Approve_Production_Release
  variables:
    - template: variables/production.yaml 
    - template: variables/shared.yaml
      parameters:
        env: ${{ variables.env }}
  jobs:
  - job: Run_Entity_Framework_Production
    pool:
      vmImage: 'windows-latest'
    displayName: Run Entity Framework Prod
    steps:
    - download: current
      displayName: Download Sql Artifact

    - template: templates/Azure/Common/unlock-lock.yaml@azTemplates
      parameters:
        addOrDelete: delete
        lockName: "${{ variables.env }}-lock"
        resourceGroup: ${{ variables.vhResourceGroup }}
        azureSubscription: ${{ variables.subscriptionName }}

    - template: templates/Database/EntityFramework/run-entity-framework.yaml@azTemplates
      parameters:
        sqlServerResourceGroup: ${{ variables.vhResourceGroup }}
        sqlServerName: ${{ variables.vhSQLServerName }}
        databaseName: ${{ variables.NotificationApiDbName }}
        azureSubscription: ${{ variables.subscriptionName }}
        sqlScriptLocation: "$(Pipeline.Workspace)/${{ variables.efContextName }}-$(Build.BuildId)/${{ variables.efContextName }}.sql"
        kvfirewallRequired: false
        kvName: ${{ variables.vhKeyVault }}
        kvSqlPasswordSecret: ${{ variables.vhSqlPasswordSecret }}
        kvSqlUsernameSecret: ${{ variables.vhSqlUsernameSecret }}

    - template: templates/Azure/Common/unlock-lock.yaml@azTemplates
      parameters:
        addOrDelete: add
        lockName: "${{ variables.env }}-lock"
        resourceGroup: ${{ variables.vhResourceGroup }}
        azureSubscription: ${{ variables.subscriptionName }}
        lockType: CanNotDelete

#####################################################
# Build Docker Image & Push. ########################
- stage: Docker_Build_Push_Prod
  displayName: Docker Build & Push Image
  dependsOn:
    - Run_Entity_Framework_Production
  variables:
  - template: variables/production.yaml
  - template: variables/shared.yaml
  jobs:
  - job: Docker_Build
    displayName: "Docker Build and Push"
    steps:
    - checkout: self

    - bash: |
        sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.sds.config
      displayName: Add NuGet Feed Authentication
      workingDirectory: ${{ variables.appName }}
  
    - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates
      parameters:
        azureSubscription: ${{ variables.acrSubscription }}
        acrName: ${{ variables.acrName }}
        repositoryName:  ${{ variables.repositoryName }}
      
    - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
      parameters:
        azureSubscription: ${{ variables.acrSubscription }}
        acrName: ${{ variables.acrName }}
        repositoryName:  ${{ variables.repositoryName }}
        imageName: "${{ variables.imageName }}"
        imageTags:
          - 'latest'
          - '${{ variables.releaseTagName }}'

#########################################
# Push Helm Charts to Repo. #############
- stage: Helm_Prod
  displayName: Push Helm Charts
  dependsOn: Docker_Build_Push_Prod
  variables:
    - template: variables/production.yaml
    - template: variables/shared.yaml
    - group: vh-github-app-credentials
  jobs:
  - job: Helm
    displayName: "Helm Push"
    steps:
    - checkout: self

    - template: templates\Github\get-app-token.yaml@azTemplates
      parameters:
        privateKeyFileName: ${{ variables.gh_app_private_key_file_name }}
        appId: $(gh_app_app_id)

    - template: templates\Github\push-to-helm-chart-repo.yaml@azTemplates
      parameters:
        chartName: ${{ variables.chartName }}
        chartPath: ${{ variables.chartPath }}
        githubToken: $(githubappinstall.token)
        githubUsername: $(gh_app_name)
        githubEmail: "$(gh_app_app_id)+$(gh_app_name)[bot]@users.noreply.github.com"
        subDirectory: ${{ variables.subDirectory }}
