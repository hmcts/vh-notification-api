name: $(Date:yyyyMMddHHmm)-$(Rev:r)

trigger:
  - master

pr: none

resources:
  repositories:
    - repository: azTemplates
      type: github
      name: hmcts/azure-devops-templates
      ref: master
      endpoint: hmcts

variables:
  - template: variables/test.yaml
  - template: variables/shared.yaml

pool: 
  vmImage: ubuntu-22.04

stages:
#####################################################
# Manual Approval ########################
- stage: Manual_Approval_$(env)
  jobs:
    - job: Approve_$(env)
      displayName: 'Approve to $(env)'
      pool: server
      timeoutInMinutes: 10080 # 7 Days
      steps:
        - task: ManualValidation@0
          timeoutInMinutes: 10080 # 7 Days
          inputs:
            instructions: 'Please Approve run to $(env)'
            onTimeout: 'reject'

#####################################################
# Pre Run Tasks. ####################################
- stage: Pre_Run_Tasks_$(env)
  displayName: Pre-Release Tasks
  dependsOn: Manual_Approval_$(env)
  jobs:
  - job: Generate_Entity_Framework_Script
    displayName: "Generate Entity Framework Script"
    steps:
    - template: templates/Database/EntityFramework/generate-script.yaml@azTemplates
      parameters:
        efVersion: ${{ variables.efDotnetToolVersion }}
        outputPath: $(Build.StagingDirectory)
        contextName: ${{ variables.efContextName }}
        workingPath: $(System.DefaultWorkingDirectory)/${{ variables.appName }}/${{ variables.appName }}
        projectName: ${{ variables.efProjectName }}
        migrationsPath: ${{ variables.appName }}/${{ variables.appName }}.DAL/Migrations

  - job: package_nuget
    displayName: "Package Nuget Packages"
    steps:
      - template: templates\dotnet\package-nuget-packages.yml@azTemplates
        parameters:
          nugetProjectPath: '${{ variables.appName }}/${{ variables.nuget_package_name }}'
          vstsFeed: "${{ variables.nuget_org_name }}/${{ variables.nuget_feed_name }}"
          gitVersionConfigPath: ${{ variables.git_version_config_path }}

#####################################################
# Run Entity Framework. #############################
- stage: Run_Entity_Framework_$(env)
  displayName: $(env) EF Release
  dependsOn: Pre_Run_Tasks_$(env)

  jobs:
  - job: Run_Entity_Framework_$(env)
    displayName: Run Entity Framework $(env)
    pool:
      vmImage: 'windows-latest' # MUST BE RUN ON WINDOWS
    steps:
    - download: current
      displayName: Download Sql Artifact

    - template: templates/Database/EntityFramework/run-entity-framework.yaml@azTemplates
      parameters:
        sqlServerResourceGroup: ${{ variables.vhResourceGroup }}
        sqlServerName: ${{ variables.vhSQLServerName }}
        databaseName: ${{ variables.NotificationApiDbName }}
        azureSubscription: ${{ variables.subscriptionName }}
        sqlScriptLocation: "$(Pipeline.Workspace)/${{ variables.efContextName }}-$(Build.BuildId)/${{ variables.efContextName }}.sql"
        kvfirewallRequired: false
        kvName: ${{ variables.vhKeyVault }}
        kvSqlPasswordSecret: ${{ variables.vhSqlPasswordSecret }}
        kvSqlUsernameSecret: ${{ variables.vhSqlUsernameSecret }}

#####################################################
# Build Docker Image & Push. ########################
- stage: Docker_Build_Push
  displayName: Docker Build & Push Image
  dependsOn:
    - Run_Entity_Framework_$(env)
  jobs:
  - job: Docker_Build
    displayName: "Docker Build and Push"
    steps:
    - checkout: self

    - bash: |
        sed -i "s|</configuration>|<packageSourceCredentials><vh-packages><add key=\"Username\" value=\"PAT\" /><add key=\"ClearTextPassword\" value=\"$(System.AccessToken)\" /></vh-packages></packageSourceCredentials></configuration>|" nuget.config
      displayName: Add NuGet Feed Authentication
      workingDirectory: ${{ variables.appName }}
  
    - template: templates\Containerisation\docker\docker-compose.yaml@azTemplates
      parameters:
        azureSubscription: ${{ variables.acrSubscription }}
        acrName: ${{ variables.acrName }}
        repositoryName:  ${{ variables.repositoryName }}
      
    - template: templates\Containerisation\docker\docker-push-azure.yaml@azTemplates
      parameters:
        azureSubscription: ${{ variables.acrSubscription }}
        acrName: ${{ variables.acrName }}
        repositoryName:  ${{ variables.repositoryName }}
        imageName: "${{ variables.imageName }}"
        imageTags:
          - 'test-#{SHORTCOMMITID}#-#{DATETIME}#'